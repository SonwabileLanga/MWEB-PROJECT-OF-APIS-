{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonwabile.langa\\\\OneDrive - NTT\\\\Pictures\\\\mweb-test\\\\project test\\\\project test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { priceRange } from './Pricerange';\nimport Boxed from './components/Box';\nimport _ from \"lodash\";\nimport { Radio, RadioGroup, Stack, Checkbox } from '@chakra-ui/react';\nimport { Select, Box } from '@chakra-ui/react';\nimport { SimpleGrid } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const campaignsURL = \"https://apigw.mweb.co.za/prod/baas/proxy/marketing/campaigns/fibre?channels=120&visibility=public\";\n  const promcodeProductsURL = \"https://apigw.mweb.co.za/prod/baas/proxy/marketing/products/promos/\";\n  const [campaignsData, setCampaignData] = useState([]);\n  const [promcodeProducts, setPromcodeProducts] = useState([]);\n  const [summarizedProducts, setSuummarizedProducts] = useState([]);\n  const [providers, setProviders] = useState([\"Vuma Reach\"]);\n  const [value, setValue] = useState(JSON.stringify([\"FTTH-MITCHELLS-PREPAID-AMBER\", \"VUMA-REACH-RECURRING\", \"VUMA-REACH-28DAY-SERVICE\", \"VUMA-REACH-28DAY-SERVICE-40MBPS\"]));\n  const [valued, setValued] = useState();\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [selectedProviders, setSelectedProviders] = useState([]);\n\n  const getData = async () => {\n    await axios.get(campaignsURL).then(response => {\n      setCampaignData(response.data.campaigns);\n    }).catch(function (response) {\n      console.log(response);\n    });\n  };\n\n  const getDefaulfData = async value => {\n    await axios.get(`${promcodeProductsURL}` + JSON.parse(value).join(',') + `?sellable_online=true`).then(async response => {\n      await setPromcodeProducts(response.data);\n    });\n  };\n\n  const setAll = () => {\n    const praid = promcodeProducts.reduce((prods, pc) => [...prods, ...getProductsFromPromo(pc)], []);\n    setSuummarizedProducts(praid);\n  };\n\n  useEffect(() => {\n    getData();\n    getDefaulfData(value);\n  }, []);\n  useEffect(() => {\n    setAll();\n  }, [promcodeProducts]);\n  useEffect(() => {\n    setProviders([...new Set(summarizedProducts.map(p => p.provider))]);\n  }, [summarizedProducts]); //#endregion\n\n  const getSummarizedProduct = _ref => {\n    let {\n      productCode,\n      productName,\n      productRate,\n      subcategory\n    } = _ref;\n    const provider = subcategory.replace('Uncapped', '').replace('Capped', '').trim();\n    return {\n      productCode,\n      productName,\n      productRate,\n      provider\n    };\n  };\n\n  const getProductsFromPromo = pc => {\n    const promoCode = pc.promoCode;\n    return pc.products.reduce((prods, p) => [...prods, getSummarizedProduct(p)], []);\n  };\n\n  const onChange = async data => {\n    setValue(data);\n    setSelectedProducts([]);\n\n    if (data && data !== '1') {\n      await axios.get(`${promcodeProductsURL}` + JSON.parse(data).join(',') + `?sellable_online=true`).then(async response => {\n        await setPromcodeProducts(response.data);\n        await setSuummarizedProducts(promcodeProducts.reduce((prods, pc) => [...prods, ...getProductsFromPromo(pc)], []));\n        let provd = providers;\n        console.log(provd);\n        let something = [...new Set(summarizedProducts.map(p => p.provider))];\n        console.log(something);\n        let newCls = [...provd, ...something];\n        await setProviders(newCls);\n      }).catch(function (response) {\n        console.log(response);\n      });\n    }\n  };\n\n  const onChangeSelectedProducts = valued => {\n    setSelectedProviders([JSON.parse(valued.target.value)]);\n  };\n\n  const newFunction = () => {\n    const selectedProviderSet = new Set(selectedProviders);\n    let selectedProducts = summarizedProducts.filter(p => selectedProviderSet.has(p.provider));\n    setSelectedProducts(selectedProducts.sort((pa, pb) => pa.productRate - pb.productRate));\n  };\n\n  useEffect(() => {\n    newFunction();\n  }, [selectedProviders]);\n\n  const onPriceRangeChange = event => {\n    let selectedPriceRangeLabels = event.target.value;\n    let selectedPriceRanges = priceRange.filter(range => selectedPriceRangeLabels.includes(range.label));\n\n    const filterByPriceRanges = product => {\n      // If no price range has been selected then include all products\n      if (selectedPriceRanges.length === 0) {\n        return true;\n      }\n\n      for (const range of selectedPriceRanges) {\n        const price = product.productRate;\n\n        if (price >= range.min && price <= range.max) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    setSelectedProducts(selectedProducts.filter(filterByPriceRanges));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Fibre Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          onChange: onChange,\n          value: value,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            children: campaignsData.map(camp => /*#__PURE__*/_jsxDEV(Radio, {\n              value: JSON.stringify(camp.promocodes),\n              children: camp.name\n            }, JSON.stringify(camp.promocodes), false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 43\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fibre Providers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: [1, 5],\n          direction: ['column', 'row'],\n          children: providers.map(camp => /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: onChangeSelectedProducts,\n            value: valued,\n            value: JSON.stringify(camp),\n            size: \"md\",\n            colorScheme: \"blue\",\n            children: camp\n          }, JSON.stringify(camp), false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        m: 3,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outline\",\n            placeholder: \"Prices\",\n            width: 200,\n            onChange: onPriceRangeChange,\n            children: priceRange.map(pR => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: JSON.stringify(pR.label),\n              children: pR.label\n            }, pR.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 38\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Boxed, {\n          selectedProducts: selectedProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"LDtGkICkOB7ADHX+4ZVvSPwB2qI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sonwabile.langa/OneDrive - NTT/Pictures/mweb-test/project test/project test/test/src/App.js"],"names":["React","useEffect","useState","axios","priceRange","Boxed","_","Radio","RadioGroup","Stack","Checkbox","Select","Box","SimpleGrid","App","campaignsURL","promcodeProductsURL","campaignsData","setCampaignData","promcodeProducts","setPromcodeProducts","summarizedProducts","setSuummarizedProducts","providers","setProviders","value","setValue","JSON","stringify","valued","setValued","selectedProducts","setSelectedProducts","selectedProviders","setSelectedProviders","getData","get","then","response","data","campaigns","catch","console","log","getDefaulfData","parse","join","setAll","praid","reduce","prods","pc","getProductsFromPromo","Set","map","p","provider","getSummarizedProduct","productCode","productName","productRate","subcategory","replace","trim","promoCode","products","onChange","provd","something","newCls","onChangeSelectedProducts","target","newFunction","selectedProviderSet","filter","has","sort","pa","pb","onPriceRangeChange","event","selectedPriceRangeLabels","selectedPriceRanges","range","includes","label","filterByPriceRanges","product","length","price","min","max","camp","promocodes","name","pR"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,KAA5B,EAAmCC,QAAnC,QAAmD,kBAAnD;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,YAAY,GAAG,mGAArB;AACA,QAAMC,mBAAmB,GAAG,qEAA5B;AACA,QAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACmB,kBAAD,EAAqBC,sBAArB,IAA+CpB,QAAQ,CAAC,EAAD,CAA7D;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,CAAC,YAAD,CAAD,CAA1C;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAACyB,IAAI,CAACC,SAAL,CAAe,CAAC,8BAAD,EAAiC,sBAAjC,EAAyD,0BAAzD,EAAqF,iCAArF,CAAf,CAAD,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,EAApC;AACA,QAAM,CAAC6B,gBAAD,EAAmBC,mBAAnB,IAA0C9B,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAC+B,iBAAD,EAAoBC,oBAApB,IAA4ChC,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMiC,OAAO,GAAG,YAAY;AAC1B,UAAMhC,KAAK,CAACiC,GAAN,CAAUrB,YAAV,EAAwBsB,IAAxB,CAA6BC,QAAQ,IAAI;AAC7CpB,MAAAA,eAAe,CAACoB,QAAQ,CAACC,IAAT,CAAcC,SAAf,CAAf;AAED,KAHK,EAGHC,KAHG,CAGG,UAAUH,QAAV,EAAoB;AAE3BI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,KANK,CAAN;AAOD,GARD;;AAUA,QAAMM,cAAc,GAAG,MAAOnB,KAAP,IAAiB;AACtC,UAAMtB,KAAK,CAACiC,GAAN,CAAW,GAAEpB,mBAAoB,EAAvB,GAA2BW,IAAI,CAACkB,KAAL,CAAWpB,KAAX,EAAkBqB,IAAlB,CAAuB,GAAvB,CAA3B,GAA0D,uBAApE,EAA4FT,IAA5F,CAAiG,MAAMC,QAAN,IAAkB;AACvH,YAAMlB,mBAAmB,CAACkB,QAAQ,CAACC,IAAV,CAAzB;AACD,KAFK,CAAN;AAGD,GAJD;;AAKA,QAAMQ,MAAM,GAAG,MAAM;AACnB,UAAMC,KAAK,GAAG7B,gBAAgB,CAAC8B,MAAjB,CAAwB,CAACC,KAAD,EAAQC,EAAR,KAAe,CAAC,GAAGD,KAAJ,EAAW,GAAGE,oBAAoB,CAACD,EAAD,CAAlC,CAAvC,EAAgF,EAAhF,CAAd;AACA7B,IAAAA,sBAAsB,CAAC0B,KAAD,CAAtB;AACD,GAHD;;AAKA/C,EAAAA,SAAS,CAAC,MAAM;AAEdkC,IAAAA,OAAO;AACPS,IAAAA,cAAc,CAACnB,KAAD,CAAd;AAED,GALQ,EAKN,EALM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AAEd8C,IAAAA,MAAM;AAEP,GAJQ,EAIN,CAAC5B,gBAAD,CAJM,CAAT;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,YAAY,CAAC,CAAC,GAAG,IAAI6B,GAAJ,CAAQhC,kBAAkB,CAACiC,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,QAA9B,CAAR,CAAJ,CAAD,CAAZ;AACD,GAFQ,EAEN,CAACnC,kBAAD,CAFM,CAAT,CA5Ca,CAiDb;;AACA,QAAMoC,oBAAoB,GAAG,QAA4D;AAAA,QAA3D;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA,WAA5B;AAAyCC,MAAAA;AAAzC,KAA2D;AACvF,UAAML,QAAQ,GAAGK,WAAW,CAACC,OAAZ,CAAoB,UAApB,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,QAA5C,EAAsD,EAAtD,EAA0DC,IAA1D,EAAjB;AACA,WAAO;AAAEL,MAAAA,WAAF;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA,WAA5B;AAAyCJ,MAAAA;AAAzC,KAAP;AACD,GAHD;;AAKA,QAAMJ,oBAAoB,GAAID,EAAD,IAAQ;AACnC,UAAMa,SAAS,GAAGb,EAAE,CAACa,SAArB;AACA,WAAOb,EAAE,CAACc,QAAH,CAAYhB,MAAZ,CAAmB,CAACC,KAAD,EAAQK,CAAR,KAAc,CAAC,GAAGL,KAAJ,EAAWO,oBAAoB,CAACF,CAAD,CAA/B,CAAjC,EAAsE,EAAtE,CAAP;AACD,GAHD;;AAKA,QAAMW,QAAQ,GAAG,MAAO3B,IAAP,IAAgB;AAC/Bb,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACAP,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;;AACA,QAAIO,IAAI,IAAIA,IAAI,KAAK,GAArB,EAA0B;AACxB,YAAMpC,KAAK,CAACiC,GAAN,CAAW,GAAEpB,mBAAoB,EAAvB,GAA2BW,IAAI,CAACkB,KAAL,CAAWN,IAAX,EAAiBO,IAAjB,CAAsB,GAAtB,CAA3B,GAAyD,uBAAnE,EAA2FT,IAA3F,CAAgG,MAAMC,QAAN,IAAkB;AACtH,cAAMlB,mBAAmB,CAACkB,QAAQ,CAACC,IAAV,CAAzB;AACA,cAAMjB,sBAAsB,CAACH,gBAAgB,CAAC8B,MAAjB,CAAwB,CAACC,KAAD,EAAQC,EAAR,KAAe,CAAC,GAAGD,KAAJ,EAAW,GAAGE,oBAAoB,CAACD,EAAD,CAAlC,CAAvC,EAAgF,EAAhF,CAAD,CAA5B;AACA,YAAIgB,KAAK,GAAG5C,SAAZ;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;AACA,YAAIC,SAAS,GAAG,CAAC,GAAG,IAAIf,GAAJ,CAAQhC,kBAAkB,CAACiC,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,QAA9B,CAAR,CAAJ,CAAhB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAYyB,SAAZ;AACA,YAAIC,MAAM,GAAG,CAAC,GAAGF,KAAJ,EAAW,GAAGC,SAAd,CAAb;AACA,cAAM5C,YAAY,CAAC6C,MAAD,CAAlB;AAED,OAVK,EAUH5B,KAVG,CAUG,UAAUH,QAAV,EAAoB;AAC3BI,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,OAZK,CAAN;AAcD;AACF,GAnBD;;AAuBA,QAAMgC,wBAAwB,GAAIzC,MAAD,IAAY;AAE3CK,IAAAA,oBAAoB,CAAC,CAACP,IAAI,CAACkB,KAAL,CAAWhB,MAAM,CAAC0C,MAAP,CAAc9C,KAAzB,CAAD,CAAD,CAApB;AACD,GAHD;;AAKA,QAAM+C,WAAW,GAAG,MAAM;AACxB,UAAMC,mBAAmB,GAAG,IAAIpB,GAAJ,CAAQpB,iBAAR,CAA5B;AAEA,QAAIF,gBAAgB,GAAGV,kBAAkB,CAACqD,MAAnB,CAA0BnB,CAAC,IAAIkB,mBAAmB,CAACE,GAApB,CAAwBpB,CAAC,CAACC,QAA1B,CAA/B,CAAvB;AAEAxB,IAAAA,mBAAmB,CAACD,gBAAgB,CAAC6C,IAAjB,CAAsB,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAAE,CAACjB,WAAH,GAAiBkB,EAAE,CAAClB,WAAtD,CAAD,CAAnB;AACD,GAND;;AAQA3D,EAAAA,SAAS,CAAC,MAAM;AACduE,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACvC,iBAAD,CAFM,CAAT;;AAIA,QAAM8C,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAIC,wBAAwB,GAAGD,KAAK,CAACT,MAAN,CAAa9C,KAA5C;AAEA,QAAIyD,mBAAmB,GAAG9E,UAAU,CAACsE,MAAX,CAAkBS,KAAK,IAAIF,wBAAwB,CAACG,QAAzB,CAAkCD,KAAK,CAACE,KAAxC,CAA3B,CAA1B;;AAEA,UAAMC,mBAAmB,GAAIC,OAAD,IAAa;AACvC;AACA,UAAIL,mBAAmB,CAACM,MAApB,KAA+B,CAAnC,EAAsC;AACpC,eAAO,IAAP;AACD;;AAED,WAAK,MAAML,KAAX,IAAoBD,mBAApB,EAAyC;AACvC,cAAMO,KAAK,GAAGF,OAAO,CAAC3B,WAAtB;;AACA,YAAI6B,KAAK,IAAIN,KAAK,CAACO,GAAf,IAAsBD,KAAK,IAAIN,KAAK,CAACQ,GAAzC,EAA8C;AAC5C,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD,KAdD;;AAgBA3D,IAAAA,mBAAmB,CAACD,gBAAgB,CAAC2C,MAAjB,CAAwBY,mBAAxB,CAAD,CAAnB;AACD,GAvBD;;AAyBA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,CAAR;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAEpB,QAAtB;AAAgC,UAAA,KAAK,EAAEzC,KAAvC;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,KAAjB;AAAA,sBACGR,aAAa,CAACqC,GAAd,CAAkBsC,IAAI,iBAAK,QAAC,KAAD;AAAO,cAAA,KAAK,EAAEjE,IAAI,CAACC,SAAL,CAAegE,IAAI,CAACC,UAApB,CAAd;AAAA,wBAAsFD,IAAI,CAACE;AAA3F,eAAoDnE,IAAI,CAACC,SAAL,CAAegE,IAAI,CAACC,UAApB,CAApD;AAAA;AAAA;AAAA;AAAA,oBAA3B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,CAAR;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAhB;AAAwB,UAAA,SAAS,EAAE,CAAC,QAAD,EAAW,KAAX,CAAnC;AAAA,oBACGtE,SAAS,CAAC+B,GAAV,CAAcsC,IAAI,iBAAK,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEtB,wBAApB;AAA8C,YAAA,KAAK,EAAEzC,MAArD;AAA6D,YAAA,KAAK,EAAEF,IAAI,CAACC,SAAL,CAAegE,IAAf,CAApE;AAAqH,YAAA,IAAI,EAAC,IAA1H;AAA+H,YAAA,WAAW,EAAC,MAA3I;AAAA,sBACrBA;AADqB,aAA+FjE,IAAI,CAACC,SAAL,CAAegE,IAAf,CAA/F;AAAA;AAAA;AAAA;AAAA,kBAAvB;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAA,+BACE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,WAAW,EAAC,QAAtC;AAA+C,YAAA,KAAK,EAAE,GAAtD;AAA2D,YAAA,QAAQ,EAAEb,kBAArE;AAAA,sBACG3E,UAAU,CAACkD,GAAX,CAAeyC,EAAE,iBAAK;AAAQ,cAAA,KAAK,EAAEpE,IAAI,CAACC,SAAL,CAAemE,EAAE,CAACV,KAAlB,CAAf;AAAA,wBAA0DU,EAAE,CAACV;AAA7D,eAA8CU,EAAE,CAACV,KAAjD;AAAA;AAAA;AAAA;AAAA,oBAAtB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE,QAAC,GAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,gBAAgB,EAAEtD;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD;;GA/JQjB,G;;KAAAA,G;AAiKT,eAAeA,GAAf","sourcesContent":["\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { priceRange } from './Pricerange'\nimport Boxed from './components/Box'\nimport _ from \"lodash\";\nimport { Radio, RadioGroup, Stack, Checkbox } from '@chakra-ui/react'\nimport { Select, Box } from '@chakra-ui/react'\nimport { SimpleGrid } from '@chakra-ui/react'\n\n\nfunction App() {\n  const campaignsURL = \"https://apigw.mweb.co.za/prod/baas/proxy/marketing/campaigns/fibre?channels=120&visibility=public\"\n  const promcodeProductsURL = \"https://apigw.mweb.co.za/prod/baas/proxy/marketing/products/promos/\"\n  const [campaignsData, setCampaignData] = useState([])\n  const [promcodeProducts, setPromcodeProducts] = useState([])\n  const [summarizedProducts, setSuummarizedProducts] = useState([])\n  const [providers, setProviders] = useState([\"Vuma Reach\"])\n  const [value, setValue] = useState(JSON.stringify([\"FTTH-MITCHELLS-PREPAID-AMBER\", \"VUMA-REACH-RECURRING\", \"VUMA-REACH-28DAY-SERVICE\", \"VUMA-REACH-28DAY-SERVICE-40MBPS\"]))\n  const [valued, setValued] = useState()\n  const [selectedProducts, setSelectedProducts] = useState([])\n  const [selectedProviders, setSelectedProviders] = useState([])\n\n  const getData = async () => {\n    await axios.get(campaignsURL).then(response => {\n      setCampaignData(response.data.campaigns)\n\n    }).catch(function (response) {\n\n      console.log(response);\n    })\n  }\n\n  const getDefaulfData = async (value) => {\n    await axios.get(`${promcodeProductsURL}` + JSON.parse(value).join(',') + `?sellable_online=true`).then(async response => {\n      await setPromcodeProducts(response.data)\n    })\n  }\n  const setAll = () => {\n    const praid = promcodeProducts.reduce((prods, pc) => [...prods, ...getProductsFromPromo(pc)], [])\n    setSuummarizedProducts(praid)\n  }\n\n  useEffect(() => {\n\n    getData()\n    getDefaulfData(value)\n\n  }, []);\n  useEffect(() => {\n\n    setAll()\n\n  }, [promcodeProducts])\n\n  useEffect(() => {\n    setProviders([...new Set(summarizedProducts.map(p => p.provider))])\n  }, [summarizedProducts])\n\n\n  //#endregion\n  const getSummarizedProduct = ({ productCode, productName, productRate, subcategory }) => {\n    const provider = subcategory.replace('Uncapped', '').replace('Capped', '').trim()\n    return { productCode, productName, productRate, provider }\n  }\n\n  const getProductsFromPromo = (pc) => {\n    const promoCode = pc.promoCode\n    return pc.products.reduce((prods, p) => [...prods, getSummarizedProduct(p)], [])\n  }\n\n  const onChange = async (data) => {\n    setValue(data)\n    setSelectedProducts([])\n    if (data && data !== '1') {\n      await axios.get(`${promcodeProductsURL}` + JSON.parse(data).join(',') + `?sellable_online=true`).then(async response => {\n        await setPromcodeProducts(response.data)\n        await setSuummarizedProducts(promcodeProducts.reduce((prods, pc) => [...prods, ...getProductsFromPromo(pc)], []))\n        let provd = providers\n        console.log(provd)\n        let something = [...new Set(summarizedProducts.map(p => p.provider))]\n        console.log(something)\n        let newCls = [...provd, ...something]\n        await setProviders(newCls)\n\n      }).catch(function (response) {\n        console.log(response);\n      })\n\n    }\n  }\n\n\n\n  const onChangeSelectedProducts = (valued) => {\n\n    setSelectedProviders([JSON.parse(valued.target.value)])\n  }\n\n  const newFunction = () => {\n    const selectedProviderSet = new Set(selectedProviders)\n\n    let selectedProducts = summarizedProducts.filter(p => selectedProviderSet.has(p.provider))\n\n    setSelectedProducts(selectedProducts.sort((pa, pb) => pa.productRate - pb.productRate))\n  }\n\n  useEffect(() => {\n    newFunction()\n  }, [selectedProviders])\n\n  const onPriceRangeChange = (event) => {\n\n    let selectedPriceRangeLabels = event.target.value\n\n    let selectedPriceRanges = priceRange.filter(range => selectedPriceRangeLabels.includes(range.label))\n\n    const filterByPriceRanges = (product) => {\n      // If no price range has been selected then include all products\n      if (selectedPriceRanges.length === 0) {\n        return true\n      }\n\n      for (const range of selectedPriceRanges) {\n        const price = product.productRate\n        if (price >= range.min && price <= range.max) {\n          return true\n        }\n      }\n\n      return false\n    }\n\n    setSelectedProducts(selectedProducts.filter(filterByPriceRanges))\n  }\n\n  return (\n    <>\n      <SimpleGrid>\n        <Box m={3}>\n          <h3>Select Fibre Campaign</h3>\n          <RadioGroup onChange={onChange} value={value} >\n            <Stack direction='row'>\n              {campaignsData.map(camp => (<Radio value={JSON.stringify(camp.promocodes)} key={JSON.stringify(camp.promocodes)}>{camp.name}</Radio>))}\n            </Stack>\n          </RadioGroup>\n        </Box>\n        <Box m={3}>\n          <h3>Fibre Providers</h3>\n          <Stack spacing={[1, 5]} direction={['column', 'row']}>\n            {providers.map(camp => (<Checkbox onChange={onChangeSelectedProducts} value={valued} value={JSON.stringify(camp)} key={JSON.stringify(camp)} size='md' colorScheme='blue' >\n              {camp}\n            </Checkbox>))}\n          </Stack>\n        </Box>\n        <Box w='100%' m={3} >\n          <>\n            <Select variant='outline' placeholder=\"Prices\" width={200} onChange={onPriceRangeChange}>\n              {priceRange.map(pR => (<option value={JSON.stringify(pR.label)} key={pR.label} >{pR.label}</option>\n              ))}\n            </Select>\n          </>\n        </Box>\n        <Box>\n          <Boxed selectedProducts={selectedProducts} />\n        </Box>\n      </SimpleGrid>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
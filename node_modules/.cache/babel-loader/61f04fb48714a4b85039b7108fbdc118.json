{"ast":null,"code":"var getDefaultParent = function (originalTarget) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n  return sampleTarget.ownerDocument.body;\n};\n\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\n\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n  var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n\n  var markerCounter = markerMap[markerName];\n  var hiddenNodes = [];\n  var elementsToKeep = new Set();\n  var elementsToStop = new Set(targets);\n\n  var keep = function (el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n\n    elementsToKeep.add(el);\n    keep(el.parentNode);\n  };\n\n  targets.forEach(keep);\n\n  var deep = function (parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n\n    Array.prototype.forEach.call(parent.children, function (node) {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        var attr = node.getAttribute(controlAttribute);\n        var alreadyHidden = attr !== null && attr !== 'false';\n        var counterValue = (counterMap.get(node) || 0) + 1;\n        var markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenNodes.push(node);\n\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledNodes.set(node, true);\n        }\n\n        if (markerValue === 1) {\n          node.setAttribute(markerName, 'true');\n        }\n\n        if (!alreadyHidden) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  };\n\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount++;\n  return function () {\n    hiddenNodes.forEach(function (node) {\n      var counterValue = counterMap.get(node) - 1;\n      var markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n\n      if (!counterValue) {\n        if (!uncontrolledNodes.has(node)) {\n          node.removeAttribute(controlAttribute);\n        }\n\n        uncontrolledNodes.delete(node);\n      }\n\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n\n    if (!lockCount) {\n      // clear\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledNodes = new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\n\n\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n  if (markerName === void 0) {\n    markerName = 'data-aria-hidden';\n  }\n\n  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  var activeParentNode = parentNode || getDefaultParent(originalTarget);\n\n  if (!activeParentNode) {\n    return function () {\n      return null;\n    };\n  } // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n\n\n  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n  return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\n\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n  if (markerName === void 0) {\n    markerName = 'data-inert-ed';\n  }\n\n  var activeParentNode = parentNode || getDefaultParent(originalTarget);\n\n  if (!activeParentNode) {\n    return function () {\n      return null;\n    };\n  }\n\n  return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\n\nexport var supportsInert = function () {\n  return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\n\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n  if (markerName === void 0) {\n    markerName = 'data-suppressed';\n  }\n\n  return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};","map":{"version":3,"sources":["C:/Users/sonwabile.langa/OneDrive - NTT/Pictures/mweb-test/project test/project test/test/node_modules/aria-hidden/dist/es2015/index.js"],"names":["getDefaultParent","originalTarget","document","sampleTarget","Array","isArray","ownerDocument","body","counterMap","WeakMap","uncontrolledNodes","markerMap","lockCount","applyAttributeToOthers","parentNode","markerName","controlAttribute","targets","markerCounter","hiddenNodes","elementsToKeep","Set","elementsToStop","keep","el","has","add","forEach","deep","parent","prototype","call","children","node","attr","getAttribute","alreadyHidden","counterValue","get","markerValue","set","push","setAttribute","clear","removeAttribute","delete","hideOthers","from","activeParentNode","apply","querySelectorAll","inertOthers","supportsInert","HTMLElement","hasOwnProperty","suppressOthers"],"mappings":"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","sourcesContent":["var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                var attr = node.getAttribute(controlAttribute);\n                var alreadyHidden = attr !== null && attr !== 'false';\n                var counterValue = (counterMap.get(node) || 0) + 1;\n                var markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute(controlAttribute, 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n"]},"metadata":{},"sourceType":"module"}